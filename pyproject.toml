[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "clustertk"
version = "0.5.0"
description = "A comprehensive toolkit for cluster analysis with full pipeline support"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Aleksey Veselov", email = "alexei.veselov92@gmail.com"}
]
keywords = ["clustering", "machine-learning", "data-analysis", "pipeline", "kmeans", "pca", "data-science"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "scipy>=1.7.0",
    "joblib>=1.0.0",
]

[project.optional-dependencies]
viz = [
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
]
extras = [
    "umap-learn>=0.5.0",
    "hdbscan>=0.8.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
all = [
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "umap-learn>=0.5.0",
    "hdbscan>=0.8.0",
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/alexeiveselov92/clustertk"
Documentation = "https://clustertk.readthedocs.io"
Repository = "https://github.com/alexeiveselov92/clustertk"
"Bug Tracker" = "https://github.com/alexeiveselov92/clustertk/issues"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=clustertk --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "scipy.*",
    "matplotlib.*",
    "seaborn.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["clustertk"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstract",
]
