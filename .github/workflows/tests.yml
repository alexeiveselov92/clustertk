name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        exclude:
          # Reduce matrix size - test all versions on Ubuntu, but only 3.9 and 3.11 on other OS
          - os: macos-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.10'
          - os: windows-latest
            python-version: '3.8'
          - os: windows-latest
            python-version: '3.10'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov

    - name: Run tests
      run: |
        pytest tests/ -v --cov=clustertk --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-optional-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install with all dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[viz,extras,dev]
        pip install pytest pytest-cov

    - name: Run tests with optional dependencies
      run: |
        pytest tests/ -v --cov=clustertk --cov-report=term-missing

    - name: Test imports
      run: |
        python -c "from clustertk.visualization import plot_clusters_2d; print('✓ Visualization imports OK')"
        python -c "from clustertk.clustering import HDBSCANClustering; print('✓ HDBSCAN imports OK')"
